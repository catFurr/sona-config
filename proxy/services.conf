
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Upstream configuration for Prosody
upstream prosody_backend {
    server 127.0.0.1:5280 max_fails=3 fail_timeout=30s;
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

server {
    listen 80;
    listen [::]:80;
    server_name {{ .Env.XMPP_DOMAIN }};

    # Redirect to HTTPS
    return 301 https://$host$request_uri;
}


server {
    # Enable TCP keepalive on client connections
    listen 443 ssl so_keepalive=15s:5s:3;
    listen [::]:443 ssl so_keepalive=15s:5s:3;
    server_name {{ .Env.XMPP_DOMAIN }};

    # Global rate limiting (relaxed)
    limit_req zone=global burst=200;

    # SSL certificates
    ssl_certificate /etc/ssl/certs/{{ .Env.XMPP_DOMAIN }}.crt;
    ssl_certificate_key /etc/ssl/private/{{ .Env.XMPP_DOMAIN }}.key;

    # Connection timeouts (server scope)
    send_timeout 25s;
    keepalive_timeout 15s;

    # HTTP-BIND (BOSH) endpoint
    location = /http-bind {
        proxy_pass http://prosody_backend/http-bind;
        proxy_set_header Host {{ .Env.XMPP_DOMAIN }};
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";

        # CORS for cross-origin BOSH from sonacove.com
        add_header 'Access-Control-Allow-Origin' 'https://sonacove.com' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
        add_header 'Vary' 'Origin' always;

        # Low-latency long-poll
        proxy_buffering off;
        tcp_nodelay on;

        # Preflight handling
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' 'https://sonacove.com' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
            add_header 'Vary' 'Origin' always;
            return 204;
        }

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 90s;
    }

    # XMPP WebSocket endpoint
    location = /xmpp-websocket {
        proxy_pass http://prosody_backend/xmpp-websocket$is_args$args;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host {{ .Env.XMPP_DOMAIN }};
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket specific settings
        tcp_nodelay on;
        proxy_buffering off;
        proxy_request_buffering off;

        # Timeouts
        proxy_socket_keepalive on;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
        proxy_connect_timeout 10s;
    }

    location = /_unlock {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Cache-Control' 'no-cache, no-store' always;
        add_header 'x-jitsi-shard' 'vmone' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Type, X-Jitsi-Region, X-Jitsi-Shard, X-Proxy-Region, X-Jitsi-Release' always;
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains' always;

        return 200 'OK';
    }


    # Handle /auth path with trailing slash redirect
    location = /auth {
        return 301 https://$server_name/auth/;
    }

    location /auth {
        # Keycloak-specific CSP
        add_header Content-Security-Policy "default-src 'self' https:; frame-src 'self' https:; connect-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' https: data:; font-src 'self' https: data:;" always;

        proxy_pass http://127.0.0.1:3000;
        proxy_set_header Host {{ .Env.KC_HOSTNAME }};
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Rewrite absolute redirects back to this host under /auth
        proxy_redirect ~^https?://{{ .Env.KC_HOSTNAME }}(/.*)$ /$1;

        # Map cookie domain from KC host to this host
        proxy_cookie_domain {{ .Env.KC_HOSTNAME }} $host;

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
}


# Drizzle Studio server block - serves on port 8443 with SSL termination
server {
    listen 8443 ssl;
    listen [::]:8443 ssl;
    server_name {{ .Env.XMPP_DOMAIN }};

    # SSL certificates
    ssl_certificate /etc/ssl/certs/{{ .Env.XMPP_DOMAIN }}.crt;
    ssl_certificate_key /etc/ssl/private/{{ .Env.XMPP_DOMAIN }}.key;

    # Connection timeouts (server scope)
    send_timeout 30s;
    keepalive_timeout 15s;

    # Proxy to Drizzle Studio
    location / {
        proxy_pass http://127.0.0.1:4983;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 60s;
    }
}
