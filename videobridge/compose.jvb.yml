services:
  jvb:
    image: jitsi/jvb:stable
    container_name: jvb
    restart: unless-stopped
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:8080/debug?full=true || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    expose:
      # public API port for colibri websocket
      - "9090"
      # private API for control and metrics
      - "8080"
    ports:
      # ICE/UDP port for media
      - "10000:10000/udp"
    volumes:
      - ./custom-jvb.conf:/tmp/custom-conf.tpl:ro # Mount template file
      - ../entrypoint.sh:/tmp/entrypoint.sh:ro # Mount the entrypoint script
      - ../.env:/tmp/env-file:ro # Mount the env file
    entrypoint: ["sh", "/tmp/entrypoint.sh"]
    environment:
      # Required by cont-init.d script
      # Define real values in .env file
      - JVB_AUTH_PASSWORD="defaultpassword"
      - XMPP_SERVER="meet.example.com"
      - JVB_WS_SERVER_ID_FALLBACK="true"
      - JVB_ADVERTISE_IPS="true"
      - LOCAL_ADDRESS="0.0.0.0"
      - SENTRY_RELEASE="false"
      - JVB_INSTANCE_ID="jvb-instance-id"

      # Custom config output path (optional - defaults to /config/custom-jvb.conf)
      - CONFIG_OUTPUT_PATH="/config/custom-jvb.conf"
    networks:
      - proxy-network
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy-network"

      # Router for JVB Colibri WebSocket
      # Nginx: location ~ ^/colibri-ws/default-id/(.*)
      - "traefik.http.routers.jvb-colibri-ws.rule=Host(`${XMPP_DOMAIN}`) && PathPrefix(`/colibri-ws/default-id/`)"
      - "traefik.http.routers.jvb-colibri-ws.entrypoints=websecure"
      - "traefik.http.routers.jvb-colibri-ws.tls.certresolver=myresolver"
      - "traefik.http.services.jvb-colibri-ws-svc.loadbalancer.server.port=9090"

networks:
  proxy-network:
    driver: bridge
    external: true
