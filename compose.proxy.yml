services:
  # Init container to create acme.json and generate dynamic traefik config
  # This generates traefik_dynamic.yml in the traefik_config volume based on environment variables
  traefik-init:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    container_name: traefik-init
    volumes:
      - "traefik_acme_storage:/data"
      - "traefik_config:/config"
    environment:
      - XMPP_DOMAIN=${XMPP_DOMAIN}
      - JVB_INSTANCES=${JVB_INSTANCES}
      - JVB_1_PUBLIC_IP=${JVB_1_PUBLIC_IP}
      - JVB_2_PUBLIC_IP=${JVB_2_PUBLIC_IP}
      - JVB_3_PUBLIC_IP=${JVB_3_PUBLIC_IP}
      - JVB_4_PUBLIC_IP=${JVB_4_PUBLIC_IP}
      - JVB_5_PUBLIC_IP=${JVB_5_PUBLIC_IP}
    restart: "no"
    logging:
      driver: json-file
      options:
        labels: "app"
    labels:
      - "app=traefik-init"

  traefik:
    image: traefik:v3.4
    container_name: traefik
    restart: unless-stopped
    depends_on:
      - traefik-init
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik_acme_storage:/data"
      - "traefik_config:/etc/traefik/dynamic:ro" # Reads dynamically generated config
    command:
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.http.middlewares=common-security-headers@file,compress-middleware@file"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/data/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
    security_opt:
      - no-new-privileges:true
    logging:
      driver: json-file
      options:
        labels: "app"
    labels:
      - "traefik.enable=true"
      - "app=traefik"
      # Unlock keep-alive endpoint
      - "traefik.http.routers.unlock.rule=Host(`${XMPP_DOMAIN}`) && Path(`/_unlock`)"
      - "traefik.http.routers.unlock.service=ping@internal"
      - "traefik.http.routers.unlock.entrypoints=websecure"
      - "traefik.http.routers.unlock.tls.certresolver=myresolver"
      - "traefik.http.routers.unlock.middlewares=unlock-headers@file"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - proxy-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    restart: unless-stopped
    command: ["--config=/etc/otelcol-contrib/config.yaml"]
    # Run as root to access Docker socket and container logs
    user: "0:0"
    volumes:
      - ./otel-config.yml:/etc/otelcol-contrib/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - proxy-network
    environment:
      - HOSTNAME=${SERVER_NAME}
      - SERVER_NAME=${SERVER_NAME}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - REGION=${SERVER_REGION:-paris-1}
      - GRAFANA_USERNAME=${GRAFANA_USERNAME}
      - GRAFANA_API_KEY=${GRAFANA_API_KEY}
    logging:
      driver: json-file
      options:
        labels: "app"
    labels:
      - "app=otel-collector"

networks:
  proxy-network:
    driver: bridge
    name: proxy-network

volumes:
  traefik_acme_storage:
    name: traefik_acme_storage
  traefik_config:
    name: traefik_config
